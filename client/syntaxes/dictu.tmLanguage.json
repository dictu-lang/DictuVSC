{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Dictu",
	"patterns": [
		{
			"include": "#comments"
		},
		{
			"include": "#keywords"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#numbers"
		},
		{
			"include": "#names"
		},
		{
			"include": "#arguments"
		}
	],
	"repository": {
		"comments": {
			"patterns": [
				{
					"name": "comment.line.double-slash.dictu",
					"match": "(//.*)"
				},
				{
					"name": "comment.block.dictu",
					"begin": "/\\*",
					"end": "\\*/"
				},
				{
					"name": "comment.line.shebang.dictu",
					"match": "(#!)"
				}
			]
		},
		"keywords": {
			"patterns": [
				{
					"name": "keyword.control.dictu",
					"match": "\\b(if|else|while|for|return|break|continue|with)\\b"
				},
				{
					"name": "constant.language.dictu",
					"match": "\\b(true|false|nil)\\b"
				},
				{
					"name": "keyword.dictu",
					"match": "\\b(def|var|const|class|enum|trait|import|from|as|and|or|not|use)\\b"
				},
				{
					"name": "keyword.operator.dictu",
					"match": "\\b(and|or|not)\\b"
				},
				{
					"name": "storage.modifier.dictu",
					"match": "\\b(abstract|static|private)\\b"
				}
			]
		},
		"strings": {
			"patterns": [
				{
					"name": "string.quoted.double.dictu",
					"begin": "\"",
					"end": "\"",
					"patterns": [
						{
							"name": "constant.character.escape.dictu",
							"match": "\\\\."
						}
					]
				},
				{
					"name": "string.quoted.single.dictu",
					"begin": "'",
					"end": "'",
					"patterns": [
						{
							"name": "constant.character.escape.dictu",
							"match": "\\\\."
						}
					]
				}
			]
		},
		"numbers": {
			"name": "constant.numeric.dictu",
			"match": "\\b[0-9]+(\\.[0-9]+)?\\b"
		},
		"names": {
			"patterns": [
				{
					"name": "entity.name.type.dictu",
					"match": "\\b([A-Z][[[:alnum:]]_]*)\\b"
				},
				{
					"match": "\\b([[:alpha:]][[[:alnum:]]_]*)\\s*\\(",
					"captures": {
						"1": {
							"name": "entity.name.function.dictu"
						}
					}
				},
				{
					"name": "variable.language.this.dictu",
					"match": "\\b(this)\\b"
				},
				{
					"name": "variable.language.super.dictu",
					"match": "\\b(super)\\b"
				},
				{
					"name": "variable.dictu",
					"match": "\\b([[:alpha:]][[[:alnum:]]_]*)\\b"
				}
			]
		},
		"arguments": {
			"patterns": [
				{
					"name": "variable.parameter.dictu",
					"match": "(?<=\\()\\s*([[:alpha:]][[:alnum:]]*)(?:\\s*,\\s*([[:alpha:]][[:alnum:]]*))*\\s*(?=\\))"
				}
			]
		}
	},
	"scopeName": "source.du"
}